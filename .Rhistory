kegg[["04080"]]
duplicated(kegg$04080)
duplicated(kegg$'04080')
which(is.na(gtf$db_xref))
which(is.na(gtffile$db_xref))
gtffile[662458,]
#' Load a gtf file.
#'@description
#' Load a gtf file from ncbi and get gene & protein infomations.
#'
#' @param gtf_file The directory of a input gtf file.
#'
#' @return gene & protein informations.
#' @export
#'
#' @examples NA
deal_gtf <- function(gtf_file,protein=T){
gtf <- as.data.frame(rtracklayer::import(gtf_file))
if (protein){
gtf <- gtf[is.na(gtf$protein_id)==F,c("protein_id","gene","db_xref")]
}
else {
gtf <- gtf[is.na(gtf$db_xref)==F,c("gene","db_xref")]
gtf <- dplyr::mutate(gtf, db_xref = stringr::str_extract(gtf$db_xref, "\\d{2,9}"))
}
return(gtf)
}
gtffile <- deal_gtf("fish.gtf",F)
kegg <- make_kegg("ely",gtffile)
View(kegg)
document()
library(devtools)
document()
document()
check()
load_all()
install()
mmu <- make_kegg(mmu)
mmu <- make_kegg("mmu")
mmugtf <- deal_gtf("genomic.gtf",protein = F)
mmukegg <- make_kegg("mmu",mmugtf)
View(mmukegg)
nodes <- get_nodes(mmukegg$'04010',species = 10090)
make_customdb(nodes)
mmuLR <- make_customdb(nodes)
mmu04010 <- make_customdb("04010.tsv")
mmu04010 <- make_customdb("04010.tsv")
mmu04010 <- make_customdb("04010.tsv")
#'
#' @param interaction_nodes nodes file downloaded from STRINGdb.
#' @param gene_info gene & protein infomations generated from down_gtf() if you need to transform protein_id to gene.
#' @param enrich A given pathway type, such as "KEGG：map04216".
#' @param annotation A given interaction type, one of "Secreted Signaling", "ECM-Recptor", "Cell-Cell Contact", "Non-protein Signaling".
#'
#' @return a cell chat database.
#' @export
#'
#' @examples NA
make_customdb <- function(interaction_nodes,gene_info=NULL,enrich=NULL,annotation=NULL){
if (is.null(gene_info)){
interaction_nodes <- interaction_nodes[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
if (is.null(enrich)){}
else
{
interaction_nodes$evidence = enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
colnames(geneinfo) <- "Symbol"
}
else {
interaction_nodes <- utils::read.csv(interaction_nodes,sep="\t")[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes <-
dplyr::mutate(interaction_nodes, ligand = gene_info$gene[match(interaction_nodes$ligand,gene_info$protein_id)])
interaction_nodes <-
dplyr::mutate(interaction_nodes, receptor = gene_info$gene[match(interaction_nodes$receptor,gene_info$protein_id)])
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
colnames(geneinfo) <- "Symbol"
if (is.null(enrich)){}
else
{
interaction_nodes$evidence <- enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
}
return(CellChat::updateCellChatDB(
interaction_nodes,
gene_info = geneinfo,
other_info = NULL,
merged = FALSE,
species_target = NULL
))
}
mmu04010 <- make_customdb("04010.tsv")
#'
#' @param interaction_nodes nodes file downloaded from STRINGdb.
#' @param gene_info gene & protein infomations generated from down_gtf() if you need to transform protein_id to gene.
#' @param enrich A given pathway type, such as "KEGG：map04216".
#' @param annotation A given interaction type, one of "Secreted Signaling", "ECM-Recptor", "Cell-Cell Contact", "Non-protein Signaling".
#'
#' @return a cell chat database.
#' @export
#'
#' @examples NA
make_customdb <- function(interaction_nodes,gene_info=NULL,enrich=NULL,annotation=NULL){
if (is.null(gene_info)==F){
interaction_nodes <- interaction_nodes[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
if (is.null(enrich)){}
else
{
interaction_nodes$evidence = enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
colnames(geneinfo) <- "Symbol"
}
else {
interaction_nodes <- utils::read.csv(interaction_nodes,sep="\t")[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes <-
dplyr::mutate(interaction_nodes, ligand = gene_info$gene[match(interaction_nodes$ligand,gene_info$protein_id)])
interaction_nodes <-
dplyr::mutate(interaction_nodes, receptor = gene_info$gene[match(interaction_nodes$receptor,gene_info$protein_id)])
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
colnames(geneinfo) <- "Symbol"
if (is.null(enrich)){}
else
{
interaction_nodes$evidence <- enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
}
return(CellChat::updateCellChatDB(
interaction_nodes,
gene_info = geneinfo,
other_info = NULL,
merged = FALSE,
species_target = NULL
))
}
mmu04010 <- make_customdb("04010.tsv")
if (is.null(gene_info)){
interaction_nodes <- interaction_nodes[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
if (is.null(enrich)){}
else
{
interaction_nodes$evidence = enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
colnames(geneinfo) <- "Symbol"
}
#'
#' @param interaction_nodes nodes file downloaded from STRINGdb.
#' @param gene_info gene & protein infomations generated from down_gtf() if you need to transform protein_id to gene.
#' @param enrich A given pathway type, such as "KEGG：map04216".
#' @param annotation A given interaction type, one of "Secreted Signaling", "ECM-Recptor", "Cell-Cell Contact", "Non-protein Signaling".
#'
#' @return a cell chat database.
#' @export
#'
#' @examples NA
make_customdb <- function(interaction_nodes,gene_info=NULL,enrich=NULL,annotation=NULL){
if (is.null(gene_info)){
interaction_nodes <- interaction_nodes[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
if (is.null(enrich)){}
else
{
interaction_nodes$evidence = enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
colnames(geneinfo) <- "Symbol"
}
else {
interaction_nodes <- utils::read.csv(interaction_nodes,sep="\t")[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes <-
dplyr::mutate(interaction_nodes, ligand = gene_info$gene[match(interaction_nodes$ligand,gene_info$protein_id)])
interaction_nodes <-
dplyr::mutate(interaction_nodes, receptor = gene_info$gene[match(interaction_nodes$receptor,gene_info$protein_id)])
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
colnames(geneinfo) <- "Symbol"
if (is.null(enrich)){}
else
{
interaction_nodes$evidence <- enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
}
return(CellChat::updateCellChatDB(
interaction_nodes,
gene_info = geneinfo,
other_info = NULL,
merged = FALSE,
species_target = NULL
))
}
mmu04010 <- make_customdb("04010.tsv")
#'
#' @param interaction_nodes nodes file downloaded from STRINGdb.
#' @param gene_info gene & protein infomations generated from down_gtf() if you need to transform protein_id to gene.
#' @param enrich A given pathway type, such as "KEGG：map04216".
#' @param annotation A given interaction type, one of "Secreted Signaling", "ECM-Recptor", "Cell-Cell Contact", "Non-protein Signaling".
#'
#' @return a cell chat database.
#' @export
#'
#' @examples NA
make_customdb <- function(interaction_nodes,gene_info=NULL,enrich=NULL,annotation=NULL){
if (is.null(gene_info)){
interaction_nodes <- utils::read.csv(interaction_nodes,sep="\t")[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes <- interaction_nodes[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
if (is.null(enrich)){}
else
{
interaction_nodes$evidence = enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
colnames(geneinfo) <- "Symbol"
}
else {
interaction_nodes <- utils::read.csv(interaction_nodes,sep="\t")[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes <-
dplyr::mutate(interaction_nodes, ligand = gene_info$gene[match(interaction_nodes$ligand,gene_info$protein_id)])
interaction_nodes <-
dplyr::mutate(interaction_nodes, receptor = gene_info$gene[match(interaction_nodes$receptor,gene_info$protein_id)])
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
colnames(geneinfo) <- "Symbol"
if (is.null(enrich)){}
else
{
interaction_nodes$evidence <- enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
}
return(CellChat::updateCellChatDB(
interaction_nodes,
gene_info = geneinfo,
other_info = NULL,
merged = FALSE,
species_target = NULL
))
}
mmu04010 <- make_customdb("04010.tsv")
View(nodes)
重写make customdb
s
重写 make customdb
#'
#' @param interaction_nodes nodes file downloaded from STRINGdb.
#' @param gene_info gene & protein infomations generated from down_gtf() if you need to transform protein_id to gene.
#' @param enrich A given pathway type, such as "KEGG：map04216".
#' @param annotation A given interaction type, one of "Secreted Signaling", "ECM-Recptor", "Cell-Cell Contact", "Non-protein Signaling".
#'
#' @return a cell chat database.
#' @export
#'
#' @examples NA
make_customdb <- function(interaction_nodes,gene_info=NULL,enrich=NULL,annotation=NULL){
if (is.null(gene_info)){
interaction_nodes <- interaction_nodes[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
if (is.null(enrich)){}
else
{
interaction_nodes$evidence = enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
colnames(geneinfo) <- "Symbol"
}
else {
interaction_nodes <- utils::read.csv(interaction_nodes,sep="\t")[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
interaction_nodes <-
dplyr::mutate(interaction_nodes, ligand = gene_info$gene[match(interaction_nodes$ligand,gene_info$protein_id)])
interaction_nodes <-
dplyr::mutate(interaction_nodes, receptor = gene_info$gene[match(interaction_nodes$receptor,gene_info$protein_id)])
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
colnames(geneinfo) <- "Symbol"
if (is.null(enrich)){}
else
{
interaction_nodes$evidence <- enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
}
return(CellChat::updateCellChatDB(
interaction_nodes,
gene_info = geneinfo,
other_info = NULL,
merged = FALSE,
species_target = NULL
))
}
mmu04010 <- make_customdb(nodes)
#' @examples NA
#'
#' @param interaction_nodes nodes file downloaded from STRINGdb.
#' @param gene_info gene & protein infomations generated from down_gtf() if you need to transform protein_id to gene.
#' @param enrich A given pathway type, such as "KEGG：map04216".
#' @param annotation A given interaction type, one of "Secreted Signaling", "ECM-Recptor", "Cell-Cell Contact", "Non-protein Signaling".
#'
#' @return a cell chat database.
#' @export
#'
#' @examples NA
make_customdb <- function(interaction_nodes,gene_info=NULL,enrich=NULL,annotation=NULL){
if (is.data.frame(interaction_nodes)==F){
interaction_nodes <- utils::read.csv(interaction_nodes,sep="\t")[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
}
if (is.null(gene_info)){
interaction_nodes <- interaction_nodes[,c(1,2)]
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
if (is.null(enrich)){}
else
{
interaction_nodes$evidence = enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
colnames(geneinfo) <- "Symbol"
}
else {
interaction_nodes <-
dplyr::mutate(interaction_nodes, ligand = gene_info$gene[match(interaction_nodes$ligand,gene_info$protein_id)])
interaction_nodes <-
dplyr::mutate(interaction_nodes, receptor = gene_info$gene[match(interaction_nodes$receptor,gene_info$protein_id)])
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
colnames(geneinfo) <- "Symbol"
if (is.null(enrich)){}
else
{
interaction_nodes$evidence <- enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
}
return(CellChat::updateCellChatDB(
interaction_nodes,
gene_info = geneinfo,
other_info = NULL,
merged = FALSE,
species_target = NULL
))
}
mmu04010 <- make_customdb("genomic.gtf")
#'
#' @param interaction_nodes nodes file downloaded from STRINGdb.
#' @param gene_info gene & protein infomations generated from down_gtf() if you need to transform protein_id to gene.
#' @param enrich A given pathway type, such as "KEGG：map04216".
#' @param annotation A given interaction type, one of "Secreted Signaling", "ECM-Recptor", "Cell-Cell Contact", "Non-protein Signaling".
#'
#' @return a cell chat database.
#' @export
#'
#' @examples NA
make_customdb <- function(interaction_nodes,gene_info=NULL,enrich=NULL,annotation=NULL){
if (is.character(interaction_nodes)){
interaction_nodes <- utils::read.csv(interaction_nodes,sep="\t")[,c(1,2)]
colnames(interaction_nodes) <- c("ligand","receptor")
}
if (is.null(gene_info)){
interaction_nodes <- interaction_nodes[,c(1,2)]
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
if (is.null(enrich)){}
else
{
interaction_nodes$evidence = enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
colnames(geneinfo) <- "Symbol"
}
else {
interaction_nodes <-
dplyr::mutate(interaction_nodes, ligand = gene_info$gene[match(interaction_nodes$ligand,gene_info$protein_id)])
interaction_nodes <-
dplyr::mutate(interaction_nodes, receptor = gene_info$gene[match(interaction_nodes$receptor,gene_info$protein_id)])
interaction_nodes$interaction_name <- paste0(interaction_nodes$ligand,"-",interaction_nodes$receptor)
interaction_nodes$pathway_name <- interaction_nodes$ligand
geneinfo <- as.data.frame(unique(c(interaction_nodes$ligand,interaction_nodes$receptor)))
colnames(geneinfo) <- "Symbol"
if (is.null(enrich)){}
else
{
interaction_nodes$evidence <- enrich
}
if (is.null(annotation)){}
else
{
interaction_nodes$annotation <- annotation
}
}
return(CellChat::updateCellChatDB(
interaction_nodes,
gene_info = geneinfo,
other_info = NULL,
merged = FALSE,
species_target = NULL
))
}
mmu04010 <- make_customdb("genomic.gtf")
mmu04010 <- make_customdb("04010.tsv")
mmu04010 <- make_customdb("04010.tsv")
mmu04010 <- make_customdb(nodes)
mmu04010 <- make_customdb("04010.tsv")
document()
load_all()
document()
check()
document()
check()
build()
load_all()
?make_kegg
load_all()
document()
check()
install()
